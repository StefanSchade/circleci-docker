#  https://circleci.com/blog/how-to-build-a-docker-image-on-circleci-2-0/

version: 2
jobs:
  frontend-build:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            cd frontend
            docker build -f Dockerfile.dev --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar

    frontend-test:
      working_directory: /app
        docker:
          - image: docker:17.05.0-ce-git
        steps:
          - checkout
          - setup_remote_docker
          - run:
          name: Run tests
          command: |
            pwd
            docker-compose -f ./docker-compose.test.yml up
#      - deploy:
#          name: Push application Docker image
#          command: |
#            if [ "${CIRCLE_BRANCH}" == "master" ]; then
#              login="$(aws ecr get-login)"
#              ${login}
#              docker tag app "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
#              docker push "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
#            fi

workflows:
  version: 2

  stage-build:
    jobs:
      - frontend-build

  stage-test:
    jobs:
      - frontend-test
