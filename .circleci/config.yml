#  https://circleci.com/blog/how-to-build-a-docker-image-on-circleci-2-0/
#  for ssh  https://circleci.com/docs/2.0/add-ssh-key/index.html?utm_source=google&utm_medium=sem&utm_campaign=sem-google-dg--emea-en-dsa-maxConv-auth-nb&utm_term=g_-_c__dsa_&utm_content=&gclid=Cj0KCQjwmuiTBhDoARIsAPiv6L_LX8LLmfSCCQw61dSLNwITxXjF60Us5UvwJdLdc1hj5N6ZEKZzXzEaAmgREALw_wcB
#  https://www.docker.com/blog/how-to-deploy-on-remote-docker-hosts-with-docker-compose/

orbs:
  docker: circleci/docker@1.5.0
version: 2.1
executors:
  docker-publisher:
  environment:
  IMAGE_NAME: ndukwearm19docker/docker-node-app
  docker: # Each job requires specifying an executor
  # (either docker, macos, or machine), see
  — image: schades/stefanschade:latest
  auth:
  username: $DOCKERHUB_USERNAME
  password: $DOCKERHUB_PASSWORD

jobs:
  frontend-setup:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup toolchain in container
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1 \
              sudo
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            cd frontend
            docker build -f dev.Dockerfile --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar

  frontend-test:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup toolchain in container
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1 \
              sudo
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Run tests
          command: |
            pwd
            docker-compose -f ./docker-compose.test.yml up

  frontend-build:
    working_directory: /app
    docker:
      - image: docker:20.10
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys:
          fingerprints:
            - "8f:79:34:08:4c:0c:51:10:d4:4e:23:79:2a:e1:74:bb"
      - run:
          name: Setup dev container
          command: |
            apk add --no-cache \
              git \
              py3-pip \
              sudo
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: build production image
          command: |
            cd frontend
            DOCKER_HOST=ssh://dockerplayground@stefanschade.de
            docker ps -a
#            docker run -p 8080:80 -it $(docker build -q .)

  deploy-github:
    machine:
      image: "ubuntu-1604:202004-01"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "9d:64:7a:8c:f2:68:b6:08:0c:16:93:68:7d:25:ea:ca"
      - checkout
      - run:
          name: "Build HTML"
          command: |
            cd frontend
            npm run build
            cd build
            git config user.email "CircleCI BOT"
            git config user.name "CircleCI BOT"
            git add --all
            git commit --allow-empty -m "CircleCI - generate html [ci skip]"
            git push

  deploy-docker-via-ssh:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "8f:79:34:08:4c:0c:51:10:d4:4e:23:79:2a:e1:74:bb"
      - run:
          name: Deploy Over SSH
          command: |
            ssh dockerplayground@stefanschade.de "docker run hello-world"

  deploy-docker-via-ssh2:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "8f:79:34:08:4c:0c:51:10:d4:4e:23:79:2a:e1:74:bb"
      - run:
          name: Deploy Over SSH
          command: |
            ssh dockerplayground@stefanschade.de "docker run hello-world"


  publishLatestToHub:
  executor: docker-publisher

  steps:
  — checkout
  — setup_remote_docker
  — run:
  name: Publish Docker Image to Docker Hub
  command: |
  echo “$DOCKERHUB_PASSWORD” | docker login -u “$DOCKERHUB_USERNAME” — password-stdin
  docker build -t $IMAGE_NAME .
  docker push $IMAGE_NAME:latest


workflows:
  myworkflow:
    jobs:
      - frontend-setup
      - frontend-test:
          requires:
            - frontend-setup
      - publishLatestToHub:
          requires:
            - frontend-test